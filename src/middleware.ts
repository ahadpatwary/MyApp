import { NextRequest ,NextResponse } from "next/server";
import { getToken } from "next-auth/jwt";

export async function middleware(req: NextRequest) {
  const token = await getToken({
    req,
    secret: process.env.NEXTAUTH_SECRET,
  });

  const { pathname } = req.nextUrl;

  // тЬЕ Public routes 
  const isPublic =
    pathname === "/" ||
    pathname === "/login" ||
    pathname === "/register" 

  console.log("middleware again commint");


  // ЁЯФТ ржпржжрж┐ logged-in ржерж╛ржХрзЗ ржПржмржВ login/register page e ржпрж╛рзЯ тЖТ feed ржП ржкрж╛ржарж╛ржУ
  if (token && isPublic) {
    return NextResponse.redirect(new URL("/feed", req.url));
  }

  // ЁЯФР ржпржжрж┐ logged-out ржерж╛ржХрзЗ ржПржмржВ protected page e ржпрж╛рзЯ тЖТ login ржП ржкрж╛ржарж╛ржУ
  if (!token && !isPublic) {
    return NextResponse.redirect(new URL("/login", req.url));
  }

  // тЬЕ Otherwise, normal request allow ржХрж░рзЛ
  return NextResponse.next();
}

export const config = {
  matcher: [
    "/((?!api/auth|_next/static|_next/image|favicon.ico).*)",
  ],
};